// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookingSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240605125738_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("HotelId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "Giza",
                            Country = "Egypt",
                            HotelId = 1
                        });
                });

            modelBuilder.Entity("Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuperAdminId")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.HasIndex("SuperAdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Email = "shady.waleed@gmail.com",
                            FirstName = "Shady",
                            IsActive = false,
                            LastName = "Waleed",
                            Password = "adminpass123",
                            SuperAdminId = 1
                        },
                        new
                        {
                            AdminId = 2,
                            Email = "mohamed.salah@gmail.com",
                            FirstName = "Mohamed",
                            IsActive = false,
                            LastName = "Salah",
                            Password = "adminpass123",
                            SuperAdminId = 1
                        });
                });

            modelBuilder.Entity("Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            CheckInDate = new DateTime(2024, 6, 5, 15, 57, 38, 183, DateTimeKind.Local).AddTicks(3122),
                            CheckOutDate = new DateTime(2024, 6, 7, 15, 57, 38, 183, DateTimeKind.Local).AddTicks(3123),
                            CustomerId = 1,
                            RoomId = 1,
                            Status = "Confirmed"
                        });
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "eslam.waleed@gmail.com",
                            FirstName = "Eslam",
                            LastName = "Waleed",
                            Password = "password123"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "abdelrahman.sameh@gmail.com",
                            FirstName = "Abdelrahman",
                            LastName = "Sameh",
                            Password = "password123"
                        });
                });

            modelBuilder.Entity("Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Entertainments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfAvailableRooms")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("TotalNumberOfRooms")
                        .HasColumnType("int");

                    b.HasKey("HotelId");

                    b.HasIndex("AdminId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            AdminId = 1,
                            ContactInfo = "0987654321",
                            IsActive = true,
                            Name = "Nile Palace Hotel",
                            NumberOfAvailableRooms = 120,
                            Rating = 8.0,
                            TotalNumberOfRooms = 150
                        },
                        new
                        {
                            HotelId = 2,
                            AdminId = 1,
                            ContactInfo = "1112223333",
                            IsActive = true,
                            Name = "Pyramids View Hotel",
                            NumberOfAvailableRooms = 180,
                            Rating = 9.0,
                            TotalNumberOfRooms = 200
                        },
                        new
                        {
                            HotelId = 3,
                            AdminId = 1,
                            ContactInfo = "4445556666",
                            IsActive = true,
                            Name = "Red Sea Resort",
                            NumberOfAvailableRooms = 100,
                            Rating = 7.0,
                            TotalNumberOfRooms = 120
                        },
                        new
                        {
                            HotelId = 4,
                            AdminId = 2,
                            ContactInfo = "7778889999",
                            IsActive = true,
                            Name = "Luxor Palace",
                            NumberOfAvailableRooms = 150,
                            Rating = 8.0,
                            TotalNumberOfRooms = 180
                        },
                        new
                        {
                            HotelId = 5,
                            AdminId = 2,
                            ContactInfo = "9990001111",
                            IsActive = true,
                            Name = "Aswan Retreat",
                            NumberOfAvailableRooms = 80,
                            Rating = 7.0,
                            TotalNumberOfRooms = 100
                        });
                });

            modelBuilder.Entity("PendingReq", b =>
                {
                    b.Property<int>("PendingReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PendingReqId"));

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("SuperAdminID")
                        .HasColumnType("int");

                    b.HasKey("PendingReqId");

                    b.HasIndex("AdminId");

                    b.ToTable("PendingReqs");
                });

            modelBuilder.Entity("Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HotelId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Comment = "Great stay!",
                            CustomerId = 1,
                            Date = new DateTime(2024, 6, 5, 15, 57, 38, 183, DateTimeKind.Local).AddTicks(3092),
                            HotelId = 1,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 2,
                            Availability = true,
                            Description = "A Triple room",
                            HotelId = 1,
                            Price = 400.0,
                            RoomType = "Triple"
                        },
                        new
                        {
                            RoomId = 1,
                            Availability = true,
                            Description = "A deluxe room",
                            HotelId = 1,
                            Price = 200.0,
                            RoomType = "Deluxe"
                        });
                });

            modelBuilder.Entity("SuperAdmin", b =>
                {
                    b.Property<int>("SuperAdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuperAdminId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("admin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("admin");

                    b.HasKey("SuperAdminId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Password")
                        .IsUnique();

                    b.ToTable("SuperAdmins");

                    b.HasData(
                        new
                        {
                            SuperAdminId = 1,
                            Name = "admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("Address", b =>
                {
                    b.HasOne("Hotel", "Hotel")
                        .WithOne("Address")
                        .HasForeignKey("Address", "HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Admin", b =>
                {
                    b.HasOne("SuperAdmin", "SuperAdmin")
                        .WithMany()
                        .HasForeignKey("SuperAdminId");

                    b.Navigation("SuperAdmin");
                });

            modelBuilder.Entity("Booking", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hotel", b =>
                {
                    b.HasOne("Admin", "HotelOwner")
                        .WithMany("Hotels")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelOwner");
                });

            modelBuilder.Entity("PendingReq", b =>
                {
                    b.HasOne("Admin", "admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.Navigation("admin");
                });

            modelBuilder.Entity("Review", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Room", b =>
                {
                    b.HasOne("Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Admin", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("Hotel", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
